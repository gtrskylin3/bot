from operator import call
from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery, Contact
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from sqlalchemy.ext.asyncio import AsyncSession
from database.orm_query import get_or_create_user, check_user_phone, update_phone
from keyboards import user_kb
from .funnel_user_router import Register
import phonenumbers

user_profile_router = Router()

class UserProfile(StatesGroup):
    waiting_for_phone = State()

@user_profile_router.callback_query(F.data=="user_profile")
async def user_profile(callback: CallbackQuery, session: AsyncSession, state: FSMContext):
    user = await get_or_create_user(session, callback.from_user.id, callback.from_user.username)
    if not user.phone:
        await state.set_state(Register.waiting_for_phone)
        await callback.message.answer("<b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</b>\n\n"
                                      "üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n"
                                    "<i>–§–æ—Ä–º–∞—Ç: +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX</i>\n\n"
                                    "<i>–û—Ç–ø—Ä–∞–≤—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä –≤ —á–∞—Ç</i>\n<i>–ò–ª–∏ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å –∫–æ–Ω—Ç–∫—Ç–æ–º –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É</i>\n"
                                    "<b>–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤—ã —Å–º–æ–∂–µ—Ç–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –∫—É—Ä—Å—ã –≤ –±–æ—Ç–µ –∏ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥–∏</b>\n\n"
                                    "<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ /cancel</i>",
                                    
                                      reply_markup=user_kb.contact_kb)
        await callback.answer('')
        return

    await callback.message.answer(f"üë§ <b>–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</b>\n\n"
                                  f"<b>–ò–º—è:</b> {user.name}\n"
                                  f"<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {user.phone}\n"
                                  "<i>–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ</i>", reply_markup=user_kb.user_profile_kb.as_markup())
    await callback.answer('')
@user_profile_router.callback_query(F.data=="change_user_phone")
async def change_user_phone(callback: CallbackQuery, state: FSMContext):
    await callback.message.delete()
    await state.set_state(UserProfile.waiting_for_phone)
    await callback.message.answer("üìû –í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n\n"
                                  "<i>–§–æ—Ä–º–∞—Ç: +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX</i>\n\n"
                                  "<i>–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º</i>\n\n"
                                  "<i>–î–ª—è –æ—Ç–º–µ–Ω—ã –≤–≤–µ–¥–∏—Ç–µ /cancel</i>", reply_markup=user_kb.contact_kb)

@user_profile_router.message(UserProfile.waiting_for_phone)
async def update_phone_handler(message: Message, state: FSMContext, session: AsyncSession):
    if message.contact:
        contact: Contact = message.contact
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–∞
        phone=contact.phone_number
        if phone.startswith('8') or phone.startswith('7'):
            phone = '+7' + phone[1:]
        await update_phone(session, message.from_user.id, phone)
        await state.clear()
        await message.answer("‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=user_kb.user_profile_kb.as_markup()) 
    else:
        phone = message.text.strip()
        if phone.startswith('8'):
            phone = '+7' + phone[1:]
        phone = phone.replace(' ', '')
        try:
            parsed_phone = phonenumbers.parse(phone, "RU")
            if not phonenumbers.is_valid_number(parsed_phone):
                await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:\n\n<i>–§–æ—Ä–º–∞—Ç: +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX</i>")
                return
            await update_phone(session, message.from_user.id, phone)
            await state.clear()
            await message.answer("‚úÖ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!", reply_markup=user_kb.user_profile_kb.as_markup())
            #–≤–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
        except phonenumbers.NumberParseException:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:\n\n<i>–§–æ—Ä–º–∞—Ç: +7XXXXXXXXXX –∏–ª–∏ 8XXXXXXXXXX</i>")
            return