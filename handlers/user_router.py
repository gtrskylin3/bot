from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, FSInputFile
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy import select

from database.models import User, Service
from keyboards.user_menu import set_user_menu
from aiogram.filters import CommandStart, Command, or_f
import keyboards.user_kb as user_kb
from database.orm_query import get_or_create_user


user_router = Router()
user_router.startup.register(set_user_menu)
image = FSInputFile("start.webp", filename='olesya.webp')


@user_router.message(CommandStart())
async def start(message: Message, session: AsyncSession):
    from_user = message.from_user
    user = await get_or_create_user(session, from_user.id, from_user.full_name)
    await message.answer_photo(photo=image, caption='–ü—Ä–∏–≤–µ—Ç —è –ß–µ—Ä–Ω–æ–≤–∞ –û–ª–µ—Å—è <b>–ü—Å–∏—Ö–æ–ª–æ–≥</b>\n' \
    '–†–∞–±–æ—Ç–∞—é —Å–æ –≤–∑—Ä–æ—Å–ª—ã–º–∏ –∏ –¥–µ—Ç—å–º–∏!‚ù§\n–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö.\n<b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ!</b>\n<b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ!</b>\n<b>–û–Ω–ª–∞–π–Ω –∏ –æ—Ñ—Ñ–ª–∞–π–Ω.</b>', reply_markup=user_kb.start_kb.as_markup())


@user_router.message(Command(commands='help'))
async def help_cmd(message: Message):
    await message.answer('–≠—Ç–æ –±–æ—Ç –≥–¥–µ <b>–≤—ã –º–æ–∂–µ—Ç–µ</b>:\n\n–ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —ç—Ñ–∏—Ä–∞—Ö\n'
    '–ò–∑—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏ —Ü–µ–Ω—ã\n\n<b>–í—Å–µ –ø—Ä–æ—Å—Ç–æ –∏ —É–¥–æ–±–Ω–æ‚ù§</b>', reply_markup=user_kb.start_kb.as_markup())

@user_router.callback_query(F.data=='service_list')
async def service_list(callback: CallbackQuery, session: AsyncSession):    
    # –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ —É—Å–ª—É–≥–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    services = await session.scalars(select(Service).where(Service.is_active == True))
    services_list = list(services)
    
    if services_list:
        text = '<b>–ú–æ–∏ —É—Å–ª—É–≥–∏:</b>\n\n'
        for service in services_list:
            text += f'<b>{service.name}</b>\n'
            text += f'üìù {service.description}\n'
            text += f'üí∞ {service.price} ‚ÇΩ\n'
            if service.duration > 60:
                text += f'‚è± {(service.duration / 60):.2f} —á.\n\n'
            else:
                text += f'‚è± {service.duration} –º–∏–Ω.\n\n'
    else:
        text = '–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç —É—Å–ª—É–≥–∏ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'
    
    await callback.message.answer(text, reply_markup=user_kb.back_mrk)
    await callback.answer('–ú–æ–∏ —É—Å–ª—É–≥–∏')

@user_router.callback_query(F.data=='back')
async def back(callback: CallbackQuery):
    await callback.message.answer_photo(photo=image, caption='–ü—Ä–∏–≤–µ—Ç —è –ß–µ—Ä–Ω–æ–≤–∞ –û–ª–µ—Å—è <b>–ü—Å–∏—Ö–æ–ª–æ–≥</b>\n' \
    '–†–∞–±–æ—Ç–∞—é —Å–æ –≤–∑—Ä–æ—Å–ª—ã–º–∏ –∏ –¥–µ—Ç—å–º–∏!‚ù§\n–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –∏ –≤ –≥—Ä—É–ø–ø–∞—Ö.\n<b>–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ!</b>\n<b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ!</b>\n<b>–û–Ω–ª–∞–π–Ω –∏ –æ—Ñ—Ñ–ª–∞–π–Ω.</b>', reply_markup=user_kb.start_kb.as_markup())

@user_router.message()
async def spam(message: Message):
    await message.answer('–í–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏')

